<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard Elements</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
    <link rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <style>
        *{
            padding: 0;
            margin: 0;
            box-sizing: border-box;
            font-family: SF Pro Text, SF Pro Icons, Helvetica Neue, Helvetica, Arial, sans-serif;
            font-size: 14px;
        }
        :root{
            ---black_1:#020202;
            ---border_modal:#181818;
             ---modal_bg:#020202ea;
             --text_modal_header:#727272;
            ---black_2:#121212;
            ---black_header:#121212;
            ---gray_1:#222222;
            ---gray_2:#5F5F5F;
            ---text_color_1:#eeeeee;
            ---text_color_2:#afafaf;
            ---logo_color:#eeeeee;
            ---icon_color_1:#eeeeee;
            ---icon_color_2:#1d1d1d;
            ---border_color:#333333;
            ---icon_color_3:#eeeeee;
            ---text_select_bg:#000000;
            ---text_select:#ffffff;
            ---text_range:#757575;
            ---text_color_btn:#000000;
        }
        .darktheme {
          ---modal_bg:#141414ea;
          ---border_modal:#e9e9e9;
          --text_modal_header:#303030;
          ---text_color_btn:#ffffff;
           ---text_select_bg:#000000;
            ---text_range:#ffffff;
            ---black_1:#f3f3f3;
            ---black_header:#6734FF;
            ---black_2:#ffffff;
            ---gray_1:#f3f3f3;
            ---gray_2:#5F5F5F;
            ---text_color_1:#000000;
            ---text_color_2:#000000;
            ---text_select:#ffffff;
            ---logo_color:#ffffff;
            ---icon_color_1:#ffffff;
            ---icon_color_2:#1d1d1d;
            ---border_color:#cacaca;
            ---icon_color_3:#000000;
        }
      .painel_base{
        width: 100%;
      }
      .painel_header{
        width: 100%;
        height: 90px;
        background: var(---black_header);
      }
      .painel_body{
        width: 100%;
        display: flex;
      }
      .painel_left{
        width: 6%;
        background: var(---black_1);
        /* height: 100vh; */
      }
      .painel_left .icones{
        display: flex;
        flex-direction: column;
        width: 100%;
        align-items: center;
        padding: 20px 0;
      }
      .painel_left .icones i{
        color: var(---icon_color_3);
        font-size: 21px;
        cursor: pointer;
        opacity: 0.3;
      }
      .painel_left .icones .icon_list{
        margin-bottom: 20px;
      }

      .painel_right{
        width: 94%;
        background: var(---black_2);
        /* height: 100vh; */
      }
      .painel_right_header{
        width: 100%;
        height: 80px;
        background: var(---gray_1);
      }
      .painel_header{
        padding: 10px 6%;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .painel_header .logo h1{
        font-size: 32px;
        font-weight: 700;
        color: var(---logo_color);
      }
      .bar_search{
        width: 50%;
        position: relative;
        height: 42px;
        border-radius: 12px;
        overflow: hidden;
      }
      .bar_search form{
        width: 100%;
      }
      .bar_search form input{
        width: 100%;
        height: 42px;
        border-radius: 12px;
        border: none;
        padding-left: 50px;
        background: var(---gray_1);
        color: var(---text_color_1);
      }
      .bar_search form input::placeholder{
        color: var(---text_color_1);
      }
      .bar_search .icon{
        height: 42px;
        position: absolute;
        top: 0;
        z-index: 2;
        width: 8%;
        display: grid;
        place-content: center;
        pointer-events: none;
      }
      .bar_search .icon i{
       color: var(---icon_color_3);
        font-size: 21px;
      }
      .painel_header .icones .icones_content{
        display: flex;
        justify-content: flex-end;
        align-items: center;
      }
       .painel_header .icones .icones_content i{
        color: var(---icon_color_1);
        font-size: 21px;
        cursor: pointer;
       }
       .painel_header .icones .icones_content .icon_user{
        padding: 0 20px;
       
       }
       .painel_right_header{
        padding-left: 30px;
        padding-right: 6%;
        display: flex;
        align-items: center;
        justify-content: space-between;
       }
       .button_cancel_hide{
        display: none;
       }
       .filter_result{
        display: flex;
        align-items: center;
        gap: 20px;
       }
       .filter_content{
        border-radius: 10px;
        border: 1px solid var(---border_color);
        padding: 5px 10px;
        color: var(---text_color_1);
       }
       .filter_content span{
        color: var(---text_color_2);
        user-select: none;
       }
       .filter_content strong{
        color: var(---text_color_1);
         user-select: none;
       }
       .filter_content_date{
        align-items: center;
        display: flex;
        gap: 5px;
       }
       .filter_content_date .texts span{
        color: var(---text_color_1)!important;
        user-select: none;
       }
       .filter_content_date .texts{
         align-items: center;
        display: flex;
        gap: 10px;
       }
       .button_filter span{
         color: var(---icon_color_3);
         border: 1px solid var(---border_color);
         padding: 5px 10px;
         border-radius: 10px;
         cursor: pointer;
       }
       .filter_events{
        display: flex;
        align-items: center;
       }
       .filter_add_event .add_text{
         color: var(---text_color_1);
         border: 1px dashed var(---border_color);
         padding: 5px 10px;
         border-radius: 10px;
         cursor: pointer;
         margin-right: 20px;
       }
       .button_cancel{
        color: var(---text_color_1);
        cursor: pointer;
       }
       .painel_right_body{
        overflow-x: scroll;
        white-space: nowrap;
        cursor: grab;
         -ms-overflow-style: none;  
            scrollbar-width: none;  
       }
       .painel_right_body::-webkit-scrollbar {
            display: none;
        }

       .painel_right_content_header thead tr th{
         padding: 10px 20px;
         color: var(---text_color_1);
         border-right: 1px solid var(---border_color);
         font-size: 15px;
         user-select: none;
       }
       .painel_right_content_header tbody tr td{
         padding: 10px 20px;
         color: var(---text_color_2);
         font-size: 13px;
         border-top: 1px solid var(---border_color);
         user-select: none;
       }
       .painel_right_content_header tr {
            display: table-row;
        }
            
       .painel_right_content_header {
         border-collapse: collapse;
         
       }
       .painel_right_content_header thead{
         border-top: 1px solid var(---border_color);
       }
       .fa-truck{
        font-size: 13px;
        margin-right: 5px;
        color: rgb(34, 143, 34);
       }
       .nf_number i{
        font-size: 13px;
        margin-left: 5px;
        color: rgb(34, 143, 34);
        border-radius: 100%;
        border: 1px solid rgb(34, 143, 34);
        height: 20px;
        width: 20px;
        display: inline-grid;
        place-items: center;
        pointer-events: none;
       }
       .nf_number {
        cursor: pointer;
       }

       /* filters */
       .painel_right_body{
        height: calc(100vh - 170px);
        position: relative;
       }
     
       .painel_right_filter_content{
        position: fixed;
        right: 0;
        top: 170px;
        background: var(---gray_1);
        margin-right: 6%;
        border-radius: 10px;
        border: 1px solid var(---border_color);
        padding: 20px;
        min-width: 260px;
        height: 590px;
        overflow-y: scroll;
        z-index: 10;
       }
       .painel_right_filter_content {
        overflow: scroll;
        -ms-overflow-style: none; 
        scrollbar-width: none;  
      }

      .painel_right_filter_content::-webkit-scrollbar {
        display: none;  /* Para Chrome, Safari e Opera */
      }

        .painel_right_filter_content input {
            width: 14px;
            height: 14px;
            -webkit-transition: all 0.2s ease-in-out;
            transition: all 0.2s ease-in-out;
            position: relative;
            cursor: pointer;
            vertical-align: -4px;
            border: 1px solid;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            border-radius: 2px;
            border-color: var(---border_color);
        }
    
        .painel_right_filter_content input:checked {
            border-color: #1773b0;
            border-width: 0px;
            background-color: #1773b0;
        }
        .filter_data_btn{
          display: flex;
          justify-content: space-between;
          padding: 5px 10px;
          border: 1px solid var(---border_color);
          border-radius: 10px;
          cursor: pointer;
        }
        .filter_data_btn .texts{
          display: flex;
          justify-content: space-between;
          align-items: center;
          gap: 10px;
        }
        .filter_title{
          color: var(---text_color_1);
          margin-bottom: 10px;
        }
        .filter_data_btn .texts span{
           color: var(---text_color_2);
        }
         .filter_data_btn .icon i{
           color: var(---text_color_2);
        }
        .filter_status{
          margin-top: 20px;
        }
        .show_more_hide{
          display: none;
        }
        .btn_show_more{
           color: var(---text_color_2);
           margin-top: 10px;
           display: block;
           cursor: pointer;
        }
        .filter_operator_input label,.filter_status_input label,.filter_shipping_company_input label{
          color: var(---text_color_2);
          margin-left: 5px;
          cursor: pointer;
        }
        .filter_operator_input,.filter_shipping_company_input,.filter_status_input {
            padding: 5px 0;
        }
        .filter_operator,.filter_shipping_company{
          margin-top: 20px;
        }
        .hide_painel{
          display: none;
        }
        /* painel filter date */
        .painel_filter_date{
          position: fixed;
          right: 6%;
          top: 170px;
          padding-top: 20px;
          padding-bottom: 20px;
          border-radius: 10px;
          background: var(---gray_1);
          border: 1px solid var(---border_color);
          max-width: 650px;
          z-index: 10;
        }
        .painel_filter_date_pressets {
          display: flex;
          flex-direction: column;
          width: 40%;
          padding-left: 20px;
        }
        .painel_filter_date_pressets button{
          background: transparent;
          border: none;
          text-align: start;
          padding: 10px 0;
          color: var(---text_color_1);
          cursor: pointer;
        }
        .painel_filter_date_infos{
          display: flex;
          justify-content: space-around;
          width: 60;
          padding-right: 8px;
        }
        .painel_filter_dates_value{
          margin-top: 30px;
        }
        .calendar-grid{
          display: grid;
          grid-template-columns: repeat(7, 1fr);
        }
        .calendar-grid div {
            padding: 10px;
            text-align: center;
            cursor: pointer;
            color: var(---text_color_1);
        }
        .painel_filter_dates_header{
          display: flex;
          align-items: center;
          justify-content: space-between;
          margin-bottom: 30px;
          padding: 0 20px;
        }
        .painel_filter_dates_header input{
          width: 34%;
          background: transparent;
          border: 1px solid var(---border_color);
          padding: 5px 10px;
          border-radius: 10px;
           color: var(---text_color_2);
        }
        .painel_filter_dates_header input::placeholder{
           color: var(---text_color_2);
           text-align: center;
        }
        .painel_filter_dates_header button,.painel_filter_dates_preview button{
          background: transparent;
          border: none;
          color: var(---text_color_2);
          cursor: pointer;
        }
        .painel_filter_dates_preview button{
          cursor: pointer;
        }
        .painel_filter_dates_preview{
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 0 21px;
        }
        #current-month{
           color: var(---text_color_1);
        }
          #current-month::first-letter {
          text-transform: capitalize;
        }
        .painel_filter_date_btns{
          width: 100%;
          margin-top: 20px;
          border-top:1px solid var(---border_color);
        }
        .painel_filter_date_btns .btns{
          width: 100%;
          display: flex;
          align-items: center;
          justify-content: flex-end;
          padding: 20px 20px 0 0;
         
        }
        .painel_filter_date_btns .btns span{
          padding: 5px 20px;
          border-radius: 10px;
          text-align: center;
          cursor: pointer;
        }
        .painel_filter_date_btn_apply{
          background: var(---text_color_1);
          color: var(---text_color_btn);
        }
        .painel_filter_date_btn_cancel{
          color: var(---text_color_2);
        }
      
        .range {
            background-color: var(---text_range);
            user-select: none;
        }
         .selected {
            background-color: var(---text_select_bg)!important;
            color: var(---text_select)!important;

        }
        .loader_base{
          position: fixed;
          width: 100%;
          height: 100%;
          display: none;
          place-items: center;
          top: 170px;
          background: var(---black_2);
          padding-right: 6%;
          padding-bottom: 170px;
          z-index: 2;
        }
        .loader_active{
          display: grid!important;
        }
       
       
         .loader_base .loader {
          width: 50px;
          aspect-ratio: 1;
          border-radius: 50%;
          border: 8px solid var(---gray_2);
          border-right-color: var(---icon_color_1);
          animation: l2 1s infinite linear;
          }
          @keyframes l2 {to{transform: rotate(1turn)}}

          .loader_base_modal{
            width: 100%;
            height: 100%;
            display: grid;
            place-items: center;
          }

          .loader_base_modal .loader {
          width: 50px;
          aspect-ratio: 1;
          border-radius: 50%;
          border: 8px solid var(---gray_2);
          border-right-color: var(---icon_color_1);
          animation: l2 1s infinite linear;
          }
          @keyframes l2 {to{transform: rotate(1turn)}}

          .pagination_base{
            height: 120px;
            width: 100%;
            display: grid;
            place-items: center;
          }
          .pagination_content button{
              background: none;
              border: 1px solid var(---border_color);
              border-radius: 6px;
              color: var(---text_color_1);
              font-size: 21px;
              width: 48px;
              height: 48px;
              cursor: pointer;
          }
          .pagination_length{
            font-size: 21px;
            color: var(---text_color_1);
            padding: 0 30px;
          }
          .pagination_content{
            position: fixed;
            bottom: 30px;
            background: var(---black_2);
          }
          .page_active{
            opacity: 1!important;
          }
      .modal{
        width: 100%;
        height: 100vh;
        background-color: var(---modal_bg);
        position: fixed;
        z-index: 1000000;
        display: none;
      } 
      .show_modal{
        display: block!important;
      }
      .modal_content{
        width: 100%;
        height: 100%;
        display: grid;
        place-items: center;
      } 
      .modal_card{
        height: 80%;
        width: 50%;
        min-height: 500px;
        min-width: 500px;
        background: var(---black_2);
        border-radius: 10px;
        border: 1px solid var(---border_color);
        padding: 30px 30px 0 30px;
       
      }  

      .modal_body{
        overflow: scroll;
         -ms-overflow-style: none; 
        scrollbar-width: none;
        height: 94%;
        width: 100%;
      }
      .modal_body_data{
        height: 100%;
      }
      .modal_header{
        display: flex;
        justify-content: space-between;
        height: 6%;
      }
      .modal_header p{
        font-size: 15px;
        color: #727272;
        user-select: none;
      }
      .modal_header .icon i{
        font-size: 21px;
        color: #727272;
        cursor: pointer;
      }
      .modal_body_data_row{
         display: flex;
         width: 100%;
         justify-content: space-between;
         padding: 10px 0;
         border-bottom: 1px solid var(---border_modal);
        }
        .modal_body_data_row span{
          color: var(---text_color_2);
        }
    
    </style>
</head>
<body>
  <div class="painel_base">
    <div class="modal">
      <div class="modal_content">
        <div class="modal_card">
          <div class="modal_header">
            <p>Informações adicionais</p>
            <div class="icon">
              <i class="fa-solid fa-circle-xmark"></i>
            </div>
          </div>
          <div class="modal_body">
            <div class="modal_body_data">
              <div class="loader_base_modal loader_modal_active">
                <div class="loader">&nbsp;</div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    <header class="painel_header">
        <div class="logo">
            <h1>Logística</h1>
        </div>
        <div class="bar_search">
            <form action="">
                <input type="text" placeholder="Pesquisa">
            </form>
            <div class="icon">
                <i class="fa-solid fa-magnifying-glass"></i>
            </div>
        </div>
        <div class="icones">
            <div class="icones_content">
              <i class="fa-solid fa-arrows-rotate"></i>
              <i class="fa-solid fa-user icon_user"></i>
              <i class="fa-solid fa-circle-half-stroke"></i>
            </div>
        </div>
    </header>
    <main class="painel_body">
        <div class="painel_left">
           <div class="icones">
            <i class="fa-solid fa-list icon_list page_active"></i>
            <i class="fa-solid fa-map-location-dot icon_map"></i>
           </div>
        </div>
        <div class="painel_right">
            <div class="painel_right_header">
                <div class="filter_result">
                    <div class="filter_content filter_content_date">
                        <span>Data:</span>
                        <div class="texts">
                          <span class="dataStartPreview"></span>
                          <span>→</span>
                          <span class="dataEndPreview"></span>
                        </div>
                    </div>
                    <div class="filter_content">
                        <span>Status: <Strong class="filter_result_status filter_result_value">Emitida DANFE</Strong></span>
                    </div>
                    <div class="filter_content">
                      <span>Operador: <Strong class="filter_result_status filter_result_operator_value">Todos</Strong></span>
                    </div>
                    <div class="filter_content">
                      <span>Transportadora: <Strong class="filter_result_status filter_result_shipping_value">Todas</Strong></span>
                    </div>
                </div>
                <div class="filter_events">
                    <div class="filter_add_event button_cancel_hide">
                        <span class="add_text">Adicionar filtro <span>+</span></span>
                    </div>
                    <div class="buttons">
                        <div class="button_filter"><span class="material-symbols-outlined">filter_list</span></div>
                        <p class="button_cancel button_cancel_hide">Cancelar</p>
                    </div>
                </div>
            </div>
            <div class="painel_right_body">
              <!-- filter painel -->
                <div class="painel_right_filter_data">
                  <!-- filter list -->
                  <div class="painel_right_filter_content hide_painel">
                    <!-- filter for date -->
                    <div class="filter_data">
                      <div class="filter_types">
                        <div class="filter_type_date filter_type">
                          <h2 class="filter_title">Data</h2>
                          <div class="filter_data_btn">
                            <div class="icon">
                              <i class="fa-solid fa-calendar-check"></i>
                            </div>
                            <div class="texts">
                              <span class="dataStart"></span>
                              <span>→</span>
                              <span class="dataEnd"></span>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                    <!-- filter for status -->
                    <div class="filter_status">
                      <h2 class="filter_title">Status</h2>
                      <form>
                        <div class="filter_status_input">
                          <input checked type="radio" id="emitida" name="Emitida DANFE" data-type="status">
                          <label for="emitida">Emitida DANFE</label>
                        </div>
                        <div class="filter_status_input">
                          <input type="radio" id="status_pendente" name="Pendente" data-type="status">
                          <label for="status_pendente">Pendente</label>
                        </div>
                        <div class="filter_status_input">
                          <input type="radio" id="status_cancelada" name="Cancelada" data-type="status">
                          <label for="status_cancelada">Cancelada</label>
                        </div>
                        <div class="filter_status_input">
                          <input type="radio" id="autorizada" name="Autorizada" data-type="status">
                          <label for="autorizada">Autorizada</label>
                        </div>                                    
                        <div class="filter_status_show_more show_more show_more_hide">
                            <div class="filter_status_input">
                              <input type="radio" id="aguardando_recibo" name="Aguardando recibo" data-type="status">
                              <label for="aguardando_recibo">Aguardando recibo</label>
                            </div>
                            <div class="filter_status_input">
                              <input type="radio" id="rejeitada" name="Rejeitada" data-type="status">
                              <label for="rejeitada">Rejeitada</label>
                            </div>
                            <div class="filter_status_input">
                              <input type="radio" id="aguardando_protocolo" name="Aguardando protocolo" data-type="status">
                              <label for="aguardando_protocolo">Aguardando protocolo</label>
                            </div>
                            <div class="filter_status_input">
                              <input type="radio" id="denegada" name="Denegada" data-type="status">
                              <label for="denegada">Denegada</label>
                            </div>
                            <div class="filter_status_input">
                              <input type="radio" id="consulta" name="Consulta situação" data-type="status">
                              <label for="consulta">Consulta situação</label>
                            </div>
                            <div class="filter_status_input">
                              <input type="radio" id="bloqueada" name="Bloqueada" data-type="status">
                              <label for="bloqueada">Bloqueada</label>
                            </div>
                        </div>
                        <span class="btn_show_more btn_show_more_status">Mostrar mais</span>
                      </form>
                    </div>
                    <!-- filter for operator -->
                    <div class="filter_operator">
                      <h2 class="filter_title">Operador</h2>
                      <form>
                        <div class="filter_operator_input">
                          <input checked type="radio" id="todos" name="Todos" data-type="operador">
                          <label for="todos">Todos</label>
                        </div>
                        <div class="filter_operator_input">
                          <input type="radio" id="vapt" name="VAPT" data-type="operador">
                          <label for="vapt">VAPT</label>
                        </div>
                        <div class="filter_operator_input">
                          <input type="radio" id="vendemmia" name="Vendemmia" data-type="operador">
                          <label for="vendemmia">Vendemmia</label>
                        </div>
                      </form>
                    </div>
                    <!-- filter for shipping company -->
                    <div class="filter_shipping_company">
                      <h2 class="filter_title">Transportadora</h2>
                      <form>
                        <div class="filter_shipping_company_input">
                          <input checked type="radio" id="todos" name="Todas" data-type="shipping_company">
                          <label for="todos">Todas</label>
                        </div>
                        <div class="filter_shipping_company_input">
                          <input type="radio" id="movvi" name="Movvi" data-type="shipping_company">
                          <label for="movvi">Movvi</label>
                        </div>
                        <div class="filter_shipping_company_input">
                          <input type="radio" id="expresso" name="Expresso São Miguel" data-type="shipping_company">
                          <label for="expresso">Expresso São Miguel</label>
                        </div>
                        <div class="filter_shipping_company_input">
                          <input type="radio" id="solistica" name="Solistica" data-type="shipping_company">
                          <label for="solistica">Solistica</label>
                        </div>                     
                        <div class="filter_shipping_company_show_more show_more show_more_hide">
                          <div class="filter_shipping_company_input">
                            <input type="radio" id="jamef" name="Jamef" data-type="shipping_company">
                            <label for="jamef">Jamef</label>
                          </div>
                          <div class="filter_shipping_company_input">
                            <input type="radio" id="amazon" name="Amazon" data-type="shipping_company">
                            <label for="amazon">Amazon</label>
                          </div>
                          <div class="filter_shipping_company_input">
                            <input type="radio" id="mercado_livre" name="Mercado Livre" data-type="shipping_company">
                            <label for="mercado_livre">Mercado Livre</label>
                          </div>
                          <div class="filter_shipping_company_input">
                            <input type="radio" id="comsil" name="Comsil" data-type="shipping_company">
                            <label for="comsil">Comsil</label>
                          </div>
                          <div class="filter_shipping_company_input">
                            <input type="radio" id="postales" name="Postales" data-type="shipping_company">
                            <label for="postales">Postales</label>
                          </div>
                          <div class="filter_shipping_company_input">
                            <input type="radio" id="valdelir" name="Valdelir Frederico" data-type="shipping_company">
                            <label for="valdelir">Valdelir Frederico</label>
                          </div>
                        </div>   
                        <span class="btn_show_more btn_show_more_company">Mostrar mais</span>
                      </form>
                    </div>
                  </div>
                  <!-- painel filter date -->
                   <div class="painel_filter_date hide_painel">
                    <div class="painel_filter_date_infos">
                      <div class="painel_filter_date_pressets date-picker-presets">
                        <button data-preset="ontem">Ontem</button>
                        <button data-preset="ultimos7dias">Últimos 7 dias</button>
                        <button data-preset="ultimos30dias">Últimos 30 dias</button>
                        <button data-preset="ultimos90dias">Últimos 90 dias</button>
                        <button data-preset="ultimos365dias">Últimos 365 dias</button>
                        <button data-preset="ultimoMes">Último mês</button>
                        <button data-preset="ultimos12meses">Últimos 12 meses</button>
                        <button data-preset="anoPassado">Ano passado</button>
                      </div>
                      <div class="painel_filter_dates">
                        <div class="painel_filter_dates_header">
                          <input type="text" id="start-date" placeholder="">
                          <button>&rarr;</button>
                          <input type="text" id="end-date" placeholder="">
                        </div>
                        <div class="painel_filter_dates_preview">
                          <button id="prev-month">&larr;</button>
                          <span id="current-month">Julho de 2024</span>
                          <button id="next-month">&rarr;</button>
                        </div>
                        <div class="painel_filter_dates_value">
                          <div class="calendar-grid">
                           
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="painel_filter_date_btns">
                      <div class="btns">
                        <span class="painel_filter_date_btn_cancel">Cancelar</span>
                        <span class="painel_filter_date_btn_apply">Aplicar</span>
                      </div>
                    </div>
                   </div>

                </div>
                <!-- data list -->
                <table class="painel_right_content_header">
                    <thead>
                        <tr>
                            <th>Número NFe</th>
                            <th>Valor de NFe</th>
                            <th>Custo de frete</th>
                            <th>% frete</th>
                            <th>SKU</th>
                            <th>Natureza OP</th>
                            <th>Data da entrada no operador</th>
                            <th>Canal</th>
                            <th>Status NFe</th>
                            <th>Status operadora</th>
                            <th>Data expedição</th>
                            <th>Nome do cliente</th>
                            <th>CPF/CNPJ</th>
                            <th>UF</th>
                            <th>Região</th>
                            <th>Data de faturamento</th>
                            <th>SLA FAT</th>
                            <th>Operador</th>
                            <th>Transportadora</th>
                            <th>Cód. Rast.</th>
                            <th>SLA OP</th>
                            <th>Data coleta</th>
                            <th>Data Emissão Cte</th>
                            <th>SLA CTE</th>
                            <th>Data ultima atualização</th>
                            <th>Status transportadora</th>
                            <th>SLA ENT</th>
                            <th>SLA TOTAL</th>
                        </tr>
                    </thead>
                    <tbody>                         
                    </tbody>
                    <div class="loader_base loader_active"><div class="loader"></div></div>
                </table>

                <div class="pagination_base">
                  <div class="pagination_content">
                    <button class="pagination_preview">&larr;</button>
                    <span class="pagination_length">1</span>
                    <button class="pagination_next">&rarr;</button>
                  </div>
                </div>
                
              </div>
        </div>
    </main>
  </div>
  <script>
    //https://dashboard-logistica-three.vercel.app
    //http://localhost:3000
    var api_url ="https://dashboard-logistica-three.vercel.app"
    const input_status = document.querySelectorAll('.filter_status_input input');
    const input_operator = document.querySelectorAll('.filter_operator_input input');
    const input_shipping_company = document.querySelectorAll('.filter_shipping_company_input input');

    inputNotChecked(input_status)
    inputNotChecked(input_operator)
    inputNotChecked(input_shipping_company)


    const btn_show_more = document.querySelectorAll('.btn_show_more')
    btn_show_more.forEach((btn)=>{
      btn.addEventListener('click',(e)=>{
        const parent = e.target.parentNode
        const listHidden = parent.querySelector('.show_more')
        listHidden.classList.toggle('show_more_hide')
        if (listHidden.classList.contains('show_more_hide')) {
          e.target.innerHTML = 'Mostrar mais'
        } else {
          e.target.innerHTML = 'Mostrar menos'
        }
      })
    })
    const btn_add_filter = document.querySelector('.filter_add_event .add_text')
    const painel_filter = document.querySelector('.painel_right_filter_content')
    btn_add_filter.addEventListener('click',()=>{
      painel_filter.classList.toggle('hide_painel')
      
    })

    const filter_data_btn = document.querySelector('.filter_data_btn')
    const painel_filter_date = document.querySelector('.painel_filter_date')
    filter_data_btn.addEventListener('click',(e)=>{
      painel_filter.classList.add('hide_painel')
      painel_filter_date.classList.remove('hide_painel')
      
    })
    var painel_filter_date_btn_cancel = document.querySelector('.painel_filter_date_btn_cancel')
    painel_filter_date_btn_cancel.addEventListener('click', (e) => {
      painel_filter_date.classList.add('hide_painel')
      painel_filter.classList.remove('hide_painel')
      initDate()
    })


    const button_filter = document.querySelector('.button_filter span')
    const filter_add_event = document.querySelector('.filter_add_event')
    const button_cancel = document.querySelector('.button_cancel')
    button_filter.addEventListener('click',()=>{
        filter_add_event.classList.remove('button_cancel_hide')
        button_cancel.classList.remove('button_cancel_hide')
        button_filter.classList.add('button_cancel_hide')
    })
    button_cancel.addEventListener('click', () => {
        filter_add_event.classList.add('button_cancel_hide')
        button_cancel.classList.add('button_cancel_hide')
        button_filter.classList.remove('button_cancel_hide')
        painel_filter_date.classList.add('hide_painel')
         painel_filter.classList.add('hide_painel')
    })

    
        const datePicker = document.querySelector('.date-picker');
        const startDateInput = document.querySelector('#start-date');
        const endDateInput = document.querySelector('#end-date');
        const calendarGrid = document.querySelector('.calendar-grid');
        const currentMonthSpan = document.querySelector('#current-month');
        const prevMonthButton = document.querySelector('#prev-month');
        const nextMonthButton = document.querySelector('#next-month');
        const applyButton = document.querySelector('.painel_filter_date_btn_apply');
        const cancelButton = document.querySelector('.painel_filter_date_btn_cancel');
        const presetButtons = document.querySelectorAll('.date-picker-presets button');

        let currentDate = new Date();
        let selectedStartDate = null;
        let selectedEndDate = null;
        let isSelecting = false;

        const dataAnterior = new Date();
        dataAnterior.setDate(currentDate.getDate() - 30);
        
        function initDate(){
          startSelecting(dataAnterior.getFullYear(), dataAnterior.getMonth(), dataAnterior.getDate())
          endDateInput.value = formatDate(currentDate);
          continueSelecting(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate())
          stopSelecting()
        }
        initDate()

        const lastDate = formatDate(dataAnterior)
        const ultimateDate = formatDate(currentDate)
        filterOptionDate(lastDate, ultimateDate)
       
        function filterOptionDate(start, last){
          document.querySelector('.dataStart').innerHTML = start
          document.querySelector('.dataEnd').innerHTML = last
          document.querySelector('.dataStartPreview').innerHTML = start
          document.querySelector('.dataEndPreview').innerHTML = last
        }


        function updateCalendar() {
          const year = currentDate.getFullYear();
          const month = currentDate.getMonth();
          const daysInMonth = new Date(year, month + 1, 0).getDate();

          currentMonthSpan.textContent = currentDate.toLocaleDateString('pt-BR', { month: 'long', year: 'numeric' });
          calendarGrid.innerHTML = '';

          for (let i = 1; i <= daysInMonth; i++) {
            const dayDiv = document.createElement('div');
            dayDiv.textContent = i;
            const date = new Date(year, month, i);

            if (isDateInRange(date)) {
              dayDiv.classList.add('range');
            }
            if (isSameDate(date, selectedStartDate) || isSameDate(date, selectedEndDate)) {
              dayDiv.classList.add('selected');
            }

            dayDiv.addEventListener('mousedown', () => startSelecting(year, month, i));
            dayDiv.addEventListener('mousemove', () => continueSelecting(year, month, i));
            dayDiv.addEventListener('mouseup', () => stopSelecting());
            calendarGrid.appendChild(dayDiv);
          }
        }

        function isDateInRange(date) {
          if (!selectedStartDate || !selectedEndDate) return false;
          return date >= selectedStartDate && date <= selectedEndDate;
        }
        function isSameDate(date1, date2) {
          if (!date1 || !date2) return false;
          return date1.getFullYear() === date2.getFullYear() &&
            date1.getMonth() === date2.getMonth() &&
            date1.getDate() === date2.getDate();
        }

      
        function startSelecting(year, month, day) {
          isSelecting = true;
          selectedStartDate = new Date(year, month, day);
          selectedEndDate = null;
          startDateInput.value = formatDate(selectedStartDate);
          endDateInput.value = '';
          updateCalendar();
        }

        function continueSelecting(year, month, day) {
          if (isSelecting) {
            selectedEndDate = new Date(year, month, day);
            startDateInput.value = formatDate(selectedStartDate);
            endDateInput.value = formatDate(selectedEndDate);
            updateCalendar();
          }
        }

        function stopSelecting() {
          if (isSelecting) {
            isSelecting = false;
            if (!selectedEndDate) {
              selectedEndDate = selectedStartDate;
            }
            startDateInput.value = formatDate(selectedStartDate);
            endDateInput.value = formatDate(selectedEndDate);
            filterOptionDate(formatDate(selectedStartDate), formatDate(selectedEndDate)) // update field filter date
            updateCalendar();
          }
        }

        function formatDate(date) {
          if (!date) return '';
          const day = String(date.getDate()).padStart(2, '0');
          const month = String(date.getMonth() + 1).padStart(2, '0');
          const year = date.getFullYear();
          return `${day}/${month}/${year}`;
        }

        function filterDate(date){
          return {
            "year": date.getFullYear(),
            "month": String(date.getMonth() + 1).padStart(2, '0'),
            "day": String(date.getDate()).padStart(2, '0')
          }
        }

        prevMonthButton.addEventListener('click', () => {
          currentDate.setMonth(currentDate.getMonth() - 1);
          updateCalendar();
        });

        nextMonthButton.addEventListener('click', () => {
          currentDate.setMonth(currentDate.getMonth() + 1);
          updateCalendar();
        });

        function sendData(page, limit){
          var startDate = filterDate(selectedStartDate)
          var endDate = filterDate(selectedEndDate)
          var invoiceStatusValue = document.querySelector('.filter_result_value').innerHTML
          var operatorValue = document.querySelector('.filter_result_operator_value').innerHTML
          var shippingCompanyValue = document.querySelector('.filter_result_shipping_value').innerHTML
          getDatas(setDataApi(startDate, endDate, invoiceStatusValue, operatorValue, shippingCompanyValue, page, limit))
        }

        const refreshData = document.querySelector('.fa-arrows-rotate')
         refreshData.addEventListener('click', () => {
            sessionStorage.clear()
            sendData(1, 100)
          });

        applyButton.addEventListener('click', () => {
          painel_filter_date.classList.add('hide_painel')
          painel_filter.classList.remove('hide_painel')
          sessionStorage.clear()
          sendData(1, 100)
        });
        
          function inputNotChecked(inputs) {
            inputs.forEach((radio) => {
              radio.addEventListener('change', (e) => {
                var name = e.target.name
                const type = e.target.dataset.type
                
                if (type == "status") {
                  document.querySelector('.filter_result_value').innerHTML = name
                }
                if (type == "operador") {
                  document.querySelector('.filter_result_operator_value').innerHTML = name
                }
                if (type == "shipping_company") {
                  document.querySelector('.filter_result_shipping_value').innerHTML = name
                }
                sessionStorage.clear()
                sendData(1, 100)
                inputs.forEach((otherRadio) => {
                  if (otherRadio !== e.target) {
                    otherRadio.checked = false;
                  }
                });
              });
            });
          }
       

        function setDataApi(startDate, endDate, invoiceStatusValue, operatorValue, shippingCompanyValue, page,limit){
           return {
            startDate: startDate,
            endDate: endDate,
            invoiceStatusValue: statusType[invoiceStatusValue],
            operatorValue: operatorValue == "Todos" ? null : operatorValue,
            shippingCompanyValue: shippingCompanyValue == "Todas" ? null : shippingCompanyValue,
            limit: limit,
            page: page
          }
        }


        var statusType = {
            "Pendente": 1,
            "Cancelada": 2,
            "Aguardando recibo":3,
            "Rejeitada": 4,
            "Autorizada": 5,
            "Emitida DANFE": 6,
            "Registrada": 7,
            "Aguardando protocolo": 8,
            "Denegada": 9,
            "Consulta situação": 10,
            "Bloqueada": 11
        }

        presetButtons.forEach(button => {
          button.addEventListener('click', () => {
            const preset = button.getAttribute('data-preset');
            
            applyPreset(preset);
          });
        });

        function applyPreset(preset) {
          const now = new Date();
          switch (preset) {
            case 'ontem':
              selectedStartDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 1);
              selectedEndDate = selectedStartDate;
              break;
            case 'ultimos7dias':
              selectedStartDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 7);
              selectedEndDate = now;
              break;
            case 'ultimos30dias':
              selectedStartDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 30);
              selectedEndDate = now;
              break;
            case 'ultimos90dias':
              selectedStartDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 90);
              selectedEndDate = now;
              break;
            case 'ultimos365dias':
              selectedStartDate = new Date(now.getFullYear(), now.getMonth(), now.getDate() - 365);
              selectedEndDate = now;
              break;
            case 'ultimoMes':
              const lastMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1);
              selectedStartDate = new Date(lastMonth.getFullYear(), lastMonth.getMonth(), 1);
              selectedEndDate = new Date(lastMonth.getFullYear(), lastMonth.getMonth() + 1, 0);
              break;
            case 'ultimos12meses':
              selectedStartDate = new Date(now.getFullYear(), now.getMonth() - 12, 1);
              selectedEndDate = new Date(now.getFullYear(), now.getMonth(), 0);
              break;
            case 'anoPassado':
              selectedStartDate = new Date(now.getFullYear() - 1, 0, 1);
              selectedEndDate = new Date(now.getFullYear() - 1, 11, 31);
              break;
          }
          startDateInput.value = formatDate(selectedStartDate);
          endDateInput.value = formatDate(selectedEndDate);
          filterOptionDate(formatDate(selectedStartDate), formatDate(selectedEndDate)) // update field filter date
          updateCalendar();
        }

        updateCalendar();
        sendData(1, 100) // init data

        document.addEventListener('DOMContentLoaded', (event) => {
            
            const scrollContainer = document.querySelector('.painel_right_body');

            let isDown = false;
            let startX;
            let scrollLeft;

            scrollContainer.addEventListener('mousedown', (e) => {
              isDown = true;
              scrollContainer.classList.add('active');
              startX = e.pageX - scrollContainer.offsetLeft;
              scrollLeft = scrollContainer.scrollLeft;
            });

            scrollContainer.addEventListener('mouseleave', () => {
              isDown = false;
              scrollContainer.classList.remove('active');
            });

            scrollContainer.addEventListener('mouseup', () => {
              isDown = false;
              scrollContainer.classList.remove('active');
            });

            scrollContainer.addEventListener('mousemove', (e) => {
              if (!isDown) return;
              e.preventDefault();
              const x = e.pageX - scrollContainer.offsetLeft;
              const walk = (x - startX) * 3;
              scrollContainer.scrollLeft = scrollLeft - walk;
            });
          });

     const loader_base = document.querySelector('.loader_base')
     
      const maxPages = 20;
      let currentPage = 1;
      let totalItems = 0;
    
     async function getDatas(data){
        const cachedData = sessionStorage.getItem(`page_${data.page}`);
        if(cachedData){
          document.querySelector('.loader_base').classList.add('loader_active')
          var result = JSON.parse(cachedData)
          renderData(result)
          loaderActive()
         document.querySelector('.loader_base').classList.remove('loader_active')
        }else{
          try {
              document.querySelector('.loader_base').classList.add('loader_active')
              const response = await fetch(`${api_url}/api`,{
                method:"POST",
                headers:{
                  'Content-Type':'application/json'
                },
                body: JSON.stringify(data)
              })
              if(response.status ==200){
                const result = await response.json()
                storeDataInLocalStorage(data.page, result);
                renderData(result)
                loaderActive()
               document.querySelector('.loader_base').classList.remove('loader_active')
              }
              
          } catch (error) {
            console.log(error)
          }
          
        }
      }

       function storeDataInLocalStorage(page, data) {
          sessionStorage.setItem(`page_${page}`, JSON.stringify(data));
          console.log('error')
          manageLocalStorage(`page_${page}`);
        }

        function manageLocalStorage(currentPage) {
          const keys = Object.keys(sessionStorage).filter(key => key.startsWith('page_'));
          const newData = keys.filter(e=> e !== currentPage)
          if (keys.length  > maxPages) {
           keys.sort((a, b) => parseInt(a.split('_')[1]) - parseInt(b.split('_')[1]));
           keys.slice(0, keys.length - maxPages).forEach(key => sessionStorage.removeItem(key));
          }
        }
      

      function loaderActive(){
        const loader_base = document.querySelector('.loader_base')
        if(loader_base.classList.contains('loader_active')){
          document.body.style.overflow = 'hidden'
        }else{
          document.body.style.overflow = 'auto'
        }
      }
      loaderActive()
      var regions = {
          "SP": "Sudeste",
          "RJ": "Sudeste",
          "MG": "Sudeste",
          "ES": "Sudeste",
          "RS": "Sul",
          "SC": "Sul",
          "PR": "Sul",
          "BA": "Nordeste",
          "PE": "Nordeste",
          "CE": "Nordeste",
          "RN": "Nordeste",
          "PB": "Nordeste",
          "AL": "Nordeste",
          "SE": "Nordeste",
          "PI": "Nordeste",
          "MA": "Nordeste",
          "PA": "Norte",
          "AM": "Norte",
          "RR": "Norte",
          "AP": "Norte",
          "TO": "Norte",
          "RO": "Norte",
          "AC": "Norte",
          "DF": "Centro-Oeste",
          "GO": "Centro-Oeste",
          "MT": "Centro-Oeste",
          "MS": "Centro-Oeste"
        };

       var statusTypeInvoice = {
          "1":"Pendente",
          "2": "Cancelada",
          "3": "Aguardando recibo",
          "4": "Rejeitada",
          "5": "Autorizada",
          "6": "Emitida DANFE",
          "7": "Registrada",
          "8": "Aguardando protocolo",
          "9": "Denegada",
          "10": "Consulta situação",
          "11": "Bloqueada",
        }
        
          function filterDoc(value) {
            let result = value
            let number = value.replace(/\D/g, '');
            if (number.length <= 11) {
              number = number.substring(0, 3) + '.' + number.substring(3, 6) + '.' + number.substring(6, 9) + '-' + number.substring(9, 11);
              result = number
            } else {
              number = number.substring(0, 2) + '.' + number.substring(2, 5) + '.' + number.substring(5, 8) + '/' + number.substring(8, 12) + '-' + number.substring(12, 14);
              result = number
            }

            return result
          }

     
      function renderData(data){
        console.log(data)
        const tableBody = document.querySelector('.painel_right_content_header tbody');
        if(data.length > 0){
          tableBody.innerHTML = ''
        }
        var template =''
        data.forEach((item)=>{
          template +=`
           <tr>
             <td class="nf_number" data-id="${item?.invoice?.id}">${item?.invoice?.numero} <i class="fa-solid fa-plus"></i></td>
             <td>${item?.operator?.valorNfFormatted ?? 'null'}</td>
             <td>null</td>
             <td>null</td>
             <td>null</td>
             <td>null</td>
             <td>${item?.operator?.dtCadastroFormatted ? formatDate(new Date(item?.operator?.dtCadastroFormatted)) : formatDate(new Date(item?.invoice?.dataEmissao))}</td>
             <td>${item?.canal}</td>
             <td>${item?.situacao}</td>
             <td>${item?.operator?.statusNf}</td>
             <td>${formatDate(new Date(item?.operator?.updatedAtFormatted))}</td>
             <td>${item?.invoice?.contato.nome}</td>
             <td>${filterDoc(item?.invoice?.contato.numeroDocumento)}</td>
             <td>${item?.invoice?.contato?.endereco.uf}</td>
             <td>${item?.region}</td>
             <td>${formatDate(new Date(item?.invoice?.dataEmissao))}</td>
             <td>null</td>
             <td>${item?.operator_name}</td>
             <td><i class="fa-solid fa-truck"></i> ${item?.operator?.nomeTransportadora ?? item?.shipping_company}</td>
             <td>null</td>
             <td>null</td>
             <td>${formatDate(new Date(item?.operator?.updatedAtFormatted))}</td>
             <td>null</td>
             <td>null</td>
             <td>${formatDate(new Date(item?.invoice?.dataEmissao))}</td>
             <td>${item?.operator?.statusNf}</td>
             <td>null</td>
             <td>null</td>
            </tr>
          `
        })
        tableBody.innerHTML = template

        if(data.length >= 100){
         document.querySelector('.pagination_next').style.display="inline-block"
          document.querySelector('.pagination_base').style.display = "grid"
        }else{
          document.querySelector('.pagination_next').style.display = "none"
           document.querySelector('.pagination_base').style.display = "none"
        }

        if(Number(document.querySelector('.pagination_length').innerHTML) > 1) {
          document.querySelector('.pagination_preview').style.display = "inline-block"
          
        } else {
          document.querySelector('.pagination_preview').style.display = "none"
         
        }
        showDataNF()
      }
     
      async function getInvoice(id){
        const response = await fetch(`${api_url}/invoice/${id}`)
        if(response.status ==200){
          const result = await response.json()
          return result
        }
      }
      const modal_body_data = document.querySelector('.modal_body_data')
      const modal = document.querySelector('.modal')

      function showDataNF(){
        const btns = document.querySelectorAll('.nf_number')
        btns.forEach((e)=>{
          e.addEventListener('click', async(btn)=>{
            modal.classList.add('show_modal')
            var id = btn.target.dataset.id 
            const invoice = await getInvoice(id)
            dataForModal(invoice)
            console.log(invoice)
          })
        })
      }

      pagination()
      var counter = 1
      function pagination(){
        const pagination_next = document.querySelector('.pagination_next')
        const pagination_preview = document.querySelector('.pagination_preview')
        const pagination_length = document.querySelector('.pagination_length')
        pagination_next.addEventListener('click', () => {
          counter++
          pagination_length.innerHTML = counter
          sendData(counter, 100)

        })
        pagination_preview.addEventListener('click', () => {
          counter--
          if (counter > 0) {
            pagination_length.innerHTML = counter
            sendData(counter, 100)
          }
        })
      }

      dackMode()
      function dackMode(){
        const btn = document.querySelector('.fa-circle-half-stroke')
        console.log(btn)
        btn.addEventListener('click',(e)=>{
          document.body.classList.toggle('darktheme')
        })
      }

   const bar_search = document.querySelector('.bar_search input');
    bar_search.addEventListener('focus', (e) => {
      bar_search.style.paddingLeft = '15px';
      const parent = e.target.parentNode.parentNode
      const icon = parent.querySelector('.icon')
      icon.style.right ="0"
      icon.style.pointerEvents= "painted";
    });

    const closeModal = document.querySelector('.modal_header .icon i')
   
    closeModal.addEventListener('click',()=>{
       modal_body_data.innerHTML = `
        <div class="loader_base_modal loader_modal_active">
          <div class="loader">&nbsp;</div>
        </div>
        `
      modal.classList.remove('show_modal')
    })

    function dataForModal(data){
     
     
      var template = `
        <div class="modal_body_data_row">
          <span>Número NFe</span>
          <span>${data.invoice.numero}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Valor de NFe</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Custo de frete</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>% frete</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>SKU</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Natureza OP</span>
          <span>${data.natureza.descricao}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Data da entrada no operador</span>
          <span>${formatDate(new Date(data.invoice.dataOperacao))}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Canal</span>
          <span>${data.canal}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Status NFe</span>
          <span>${data.situacao}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Status operadora</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Data expedição</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Nome do cliente</span>
          <span>${data.invoice.contato.nome}</span>
        </div>
         <div class="modal_body_data_row">
          <span>CPF/CNPJ</span>
          <span>${data.invoice.transporte.transportador.numeroDocumento}</span>
        </div>
         <div class="modal_body_data_row">
          <span>UF</span>
          <span>${data.invoice.contato.endereco.uf}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Região</span>
          <span>${data.region}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Data de faturamento</span>
          <span>${formatDate(new Date(data.invoice.dataEmissao))}</span>
        </div>
         <div class="modal_body_data_row">
          <span>SLA FAT</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Operador</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Transportadora</span>
          <span>${data.shipping_company}</span>
        </div>
         <div class="modal_body_data_row">
          <span>Cód. Rast.</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>SLA OP</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Data coleta</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Data Emissão Cte</span>
          <span>${formatDate(new Date(data.invoice.dataEmissao))}</span>
        </div>
         <div class="modal_body_data_row">
          <span>SLA CTE</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Data ultima atualização</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>Status transportadora</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>SLA ENT</span>
          <span>null</span>
        </div>
         <div class="modal_body_data_row">
          <span>SLA TOTAL</span>
          <span>null</span>
        </div>
      `
     modal_body_data.innerHTML = template
    }


      
     
  </script>
</body>
</html>
